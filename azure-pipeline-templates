parameters:
  - name: projectName
    type: string
  - name: servicePort
    type: string
  - name: buildCommand
    type: string
    default: 'mvn clean package'
  - name: environment
    type: string
    default: 'development'
  - name: additionalSteps
    type: stepList
    default: []

stages:
  - stage: Build
    displayName: 'Build and Test ${{ parameters.projectName }}'
    jobs:
      - job: BuildJob
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
            persistCredentials: true


          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '17'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
            displayName: 'Setup JDK'


          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              options: '-DskipTests=false'
            displayName: 'Maven Build'

          # Ejecutar pruebas con Maven
          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'test'
            displayName: 'Run Tests'

          - ${{ parameters.additionalSteps }}

          - script: |
              ${{ parameters.buildCommand }}
            displayName: 'Additional Build Commands'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/target'
              Contents: '*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy JAR Files'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
            displayName: 'Publish Artifacts'

  - stage: Deploy
    displayName: 'Deploy ${{ parameters.projectName }}'
    dependsOn: Build
    jobs:
      - deployment: DeployService
        environment: ${{ parameters.environment }}
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: 'AzureSubscription'
                    appType: 'webAppLinux'
                    appName: '${{ parameters.projectName }}'
                    package: '$(System.ArtifactsDirectory)/drop/*.jar'
                    appSettings: '-PORT ${{ parameters.servicePort }} -JAVA_OPTS -Dserver.port=${{ parameters.servicePort }}'
                    runtimeStack: 'JAVA|17'
                    deploymentMethod: 'auto'
